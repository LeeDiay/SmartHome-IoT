## Autogenerated by Scribe. DO NOT MODIFY.

name: 'Sensor Data'
description: ''
endpoints:
  -
    httpMethods:
      - GET
    uri: api/sensor-data
    metadata:
      groupName: 'Sensor Data'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: |-
        Retrieve all sensor data.

        This endpoint retrieves all sensor data from the database, sorted by the time received.
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "current_page": 1,
            "data": [
              {
                "id": 1,
                "temperature": 22.5,
                "humidity": 60,
                "light": 300,
                "received_at": "2024-10-02 15:32:10"
              },
              // ... other data entries
            ],
            "last_page": 10,
            "total": 100
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/sensor-data/latest
    metadata:
      groupName: 'Sensor Data'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: |-
        Get latest sensor data.

        This endpoint retrieves the latest sensor data from the database, sorted by the time received.
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "current_page": 1,
            "data": [
              {
                "id": 1,
                "temperature": 22.5,
                "humidity": 60,
                "light": 300,
                "received_at": "2024-10-02 15:32:10"
              },
              // ... other data entries
            ],
            "last_page": 10,
            "total": 100
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/sensor-data/filter
    metadata:
      groupName: 'Sensor Data'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: |-
        Filter sensor data.

        This endpoint filters sensor data based on the given parameters: start date, end date, sort by attributes, and sort order.
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      start_date:
        name: start_date
        description: 'optional The start date for filtering data. Format: YYYY-MM-DD HH:MM:SS'
        required: false
        example: molestiae
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      end_date:
        name: end_date
        description: 'optional The end date for filtering data. Format: YYYY-MM-DD HH:MM:SS'
        required: false
        example: quos
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      sort_by:
        name: sort_by
        description: "optional The attributes to sort by (e.g., ['light', 'temperature'])."
        required: false
        example: null
        type: 'string[]'
        enumValues: []
        exampleWasSpecified: true
        custom: []
      sort_order:
        name: sort_order
        description: "optional The order to sort by, either 'asc' or 'desc' (default is 'asc')."
        required: false
        example: officiis
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      start_date: molestiae
      end_date: quos
      sort_by: null
      sort_order: officiis
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "current_page": 1,
            "data": [
              {
                "id": 1,
                "temperature": 22.5,
                "humidity": 60,
                "light": 300,
                "received_at": "2024-10-02 15:32:10"
              },
              // ... other filtered data entries
            ],
            "last_page": 10,
            "total": 50
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
